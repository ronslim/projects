apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secrets
  namespace: postgresql
data:
  pgadmin-password: <desired password in base64>

apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-configmap
  namespace: postgresql
data:
  servers.json: |
    {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 5432,
           "Username": "postgres",
           "Host": "localhost",
           "SSLMode": "prefer",
           "MaintenanceDB": "postgres"
          }
        }
    }


apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin-statefulset
  namespace: postgresql
spec:
  serviceName: pgadmin-service
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:5.4
          imagePullPolicy: Always
          env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: <user@emaildomain.com>
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pgadmin-secrets
                key: pgadmin-password
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          volumeMounts:
          - name: pgadmin-configvol
            mountPath: /pgadmin4/servers.json
            subPath: servers.json
            readOnly: true
          - name: pgadmin-data
            mountPath: /var/lib/pgadmin
      volumes:
      - name: pgadmin-configvol
        configMap:
          name: pgadmin-configmap
  volumeClaimTemplates:
  - metadata:
      name: pgadmin-data
      namespace: postgresql
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi

apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  namespace: postgresql
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: http
  selector:
    app: pgadmin
  type: NodePort

apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service-db
  namespace: postgresql
spec:
  ports:
  - protocol: TCP
    port: 5432
  selector:
    app: pgadmin
  type: NodePort

kubectl port-forward --address localhost,192.168.16.133 service/pgadmin-service -n postgresql 30243:80